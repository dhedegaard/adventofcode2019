# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "Install Node.js"

  - script: |
      npm install -g yarn
      yarn
    displayName: "Install yarn and NPM dependencies"

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      cargo install wasm-pack
    displayName: Install rust and wasm-pack

  - script: |
      yarn test
    displayName: Run tests

  - script: |
      yarn build
    displayName: Build release

  - script: |
      pip install awscli --upgrade --ignore-installed six
    displayName: "Install AWS CLI"

  - script: |
      aws s3 sync --delete --acl public-read ./public s3://aoc2019.dhedegaard.dk
      aws s3 cp \
        --content-type 'text/html; charset=utf-8' \
        --acl public-read \
        ./public s3://aoc2019.dhedegaard.dk/index.html \
        --exclude "*"
        --include "*.html"
    displayName: "deploy to S3"
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

  - script: |
      aws cloudfront create-invalidation --distribution-id $CDN_DISTRIBUTION_ID --paths "/*"
    displayName: "Invalidate Cloudfront edge cache"
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      CDN_DISTRIBUTION_ID: $(CDN_DISTRIBUTION_ID)

  - script: |
      curl -X DELETE -v \
        https://api.cloudflare.com/client/v4/zones/b6f5f6304bf6e3edf1e14b340d0bff29/purge_cache \
        -H 'cache-control: no-cache' \
        -H 'content-type: application/json' \
        -H 'x-auth-email: dennis@dhedegaard.dk' \
        -H 'x-auth-key: '$CLOUDFLARE_AUTH_KEY \
        -d '{"files": ["https://aoc2019.dhedegaard.dk"]}'
    displayName: "Purge Cloudflare cache"
    env:
      CLOUDFLARE_AUTH_KEY: $(CLOUDFLARE_AUTH_KEY)
